require "json"
require "http"

require "./hn/*"

# {
#   "by" : "bajaj",
#   "descendants" : 60,
#   "id" : 17443293,
#   "kids" : [ 17443474, 17443859, 17443454, 17443394, 17443682, 17443841, 17443703, 17443943, 17443581 ],
#   "score" : 75,
#   "time" : 1530550418,
#   "title" : "Lyft Follows Uber Into Bike-Sharing Lane, Buying Owner of CitiBike",
#   "type" : "story",
#   "url" : "https://www.nytimes.com/2018/07/02/business/dealbook/lyft-citibike-motivate-bike-share.html"
# }
class Item
  JSON.mapping(
    id: Int64,
    title: String,
    type: String,
    time: UInt64,
    score: Int32,
    kids: Array(Int64),
    url: String,
  )
end

# response = HTTP::Client.get "https://hacker-news.firebaseio.com/v0/topstories.json"
body = "[17443293,17442875,17439832,17439109,17441060,17442187,17443386,17440862,17442533,17441601,17439467,17443070,17440152,17443399,17442439,17439171,17438551,17439594,17442026,17438685,17440097,17442104,17440709,17441648,17434962,17433402,17438552,17434708,17439811,17437090,17434954,17438106,17442306,17438359,17443753,17440374,17443550,17435655,17435671,17443279,17443153,17438189,17443166,17436591,17435020,17439950,17437229,17438733,17438022,17436958,17429625,17438333,17439025,17436371,17430397,17438042,17438272,17438925,17424652,17437466,17430265,17440821,17433822,17438483,17434430,17437949,17438516,17437087,17433899,17438690,17441353,17441820,17437174,17430085,17437360,17437736,17440919,17424970,17435512,17429681,17437210,17440770,17436025,17437689,17430416,17435044,17435869,17434948,17435159,17440808,17440616,17427560,17440815,17424057,17429413,17422770,17438499,17438286,17429435,17440942,17434536,17430740,17435000,17430335,17440878,17433122,17434819,17436828,17426390,17429755,17442189,17420681,17433885,17427853,17432355,17433525,17430393,17423538,17432974,17429878,17428751,17421680,17429605,17437185,17425768,17426029,17430577,17433904,17430917,17436645,17437793,17436604,17428753,17429959,17430546,17428394,17430952,17424735,17431123,17433682,17428007,17427593,17430149,17427437,17429560,17434972,17419041,17434435,17435287,17435551,17426194,17435071,17425377,17425033,17424442,17429284,17431609,17432560,17424297,17422917,17429381,17431577,17423977,17428865,17423246,17429101,17432705,17432692,17428665,17429057,17429354,17434437,17435213,17426311,17432801,17430540,17421779,17423609,17424511,17434208,17430727,17420659,17421062,17433142,17427740,17430963,17423905,17436173,17425116,17424987,17425167,17433173,17433752,17421140,17420674,17435595,17422162,17419063,17430660,17420532,17424005,17429302,17426392,17431663,17427712,17427026,17425278,17426219,17430673,17431737,17425584,17420979,17423787,17425691,17425262,17420792,17433641,17419473,17425156,17424555,17433487,17428655,17424061,17428667,17422980,17424533,17423724,17423107,17437790,17423373,17424516,17423109,17420292,17427511,17435419,17420934,17436412,17423846,17422488,17421175,17422822,17434367,17430475,17432146,17427928,17418813,17435824,17429846,17424002,17429705,17418805,17425901,17420714,17418956,17430059,17420969,17432335,17419303,17422941,17431053,17436613,17430329,17420849,17426228,17424204,17429330,17430011,17434157,17432343,17420286,17421956,17421586,17422057,17422765,17435353,17419351,17425230,17437960,17424125,17424589,17434014,17434887,17431685,17436051,17424617,17426170,17420605,17418938,17420344,17433338,17424312,17434184,17418934,17421836,17426021,17419261,17421880,17423168,17419319,17419154,17431669,17421298,17435330,17433509,17428707,17423980,17435791,17419299,17420265,17435699,17424927,17426915,17429132,17424639,17429968,17424873,17424538,17420367,17423161,17431709,17432980,17426185,17433908,17433097,17425100,17421416,17436945,17431845,17427822,17434967,17419446,17434346,17425943,17423185,17424085,17428554,17429979,17422612,17433616,17419118,17433508,17433497,17433468,17419615,17427001,17432623,17419611,17427544,17430695,17428194,17421691,17420087,17432747,17432557,17422805,17432528,17427278,17426440,17429837,17428348,17429493,17423251,17427419,17431032,17426693,17426388,17426384,17422159,17427778,17419556,17419439,17419340,17422910,17424733,17430361,17430310,17428436,17423798,17427903,17424806,17426732,17429370,17419602,17432083,17426265,17418931,17426491,17428886,17423806,17428614,17420927,17420915,17420723,17423067,17419777,17427815,17427559,17419094,17419033,17418905,17427115,17439689,17422139,17433055,17425840,17425661,17425335,17425177,17425127,17421540,17421309,17423800,17423773,17419489,17419288,17418972,17422704,17422575,17425760,17419680,17420753,17420399,17419321,17425500,17426519,17425870,17430957,17421884,17422516,17433717,17432797,17435097,17434128,17434162,17438506,17440689,17437408,17425371,17424182,17427571,17426058]"
items = JSON.parse(body).to_a.map { |v| v.as_i64 }
# puts items
puts typeof(items)
top1 = items[0..1]

puts top1
top1.each do |v|
  b = "{\"by\":\"bajaj\",\"descendants\":82,\"id\":17443293,\"kids\":[17443474,17443859,17443454,17444144,17443394,17443682,17443841,17443703,17444023,17443943,17443581],\"score\":83,\"time\":1530550418,\"title\":\"Lyft Follows Uber Into Bike-Sharing Lane, Buying Owner of CitiBike\",\"type\":\"story\",\"url\":\"https://www.nytimes.com/2018/07/02/business/dealbook/lyft-citibike-motivate-bike-share.html\"}"
  # response = HTTP::Client.get "https://hacker-news.firebaseio.com/v0/item/#{v}.json"
  # puts response.body
  item = Item.from_json b
  pp item
end
